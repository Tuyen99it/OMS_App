Summary:
+ Tạo Model Product
+ Xây dựng controller hiển thị sản phẩm
+ Kích hoạt section
+ Xây dựng cấu trúc dữ liệu Cart
+ Thêm mặt hàng vào Cart
+ Trang hiển thị Cart
+ Tạo cartPartial, giỏ hàng ở menu

1. Tạo model Product
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace OMS_App.MODels
{
    [Table("Product")]
    public class Product
    {
        [Key]
        public int ProductId { get; set; }
        public string Name { get; set; }
        public string Description { get; set; }
        public double Price { get; set; }
    }
}
- Update table vào DBContext
using Microsoft.EntityFrameworkCore;

using OMS_App.Models;
using Microsoft.AspNetCore.Identity.EntityFrameworkCore;
using Microsoft.AspNetCore.Identity;
using OMS_App.Areas.Post.Models;
namespace OMS_App.Data
{
    public class OMSDBContext : IdentityDbContext<AppUser>
    {

        public DbSet<AppUser> AppUsers { get; set; }
        public DbSet<Category> Categories { get; set; }
        public DbSet<Post> Posts { get; set; }
        public DbSet<PostCategory> PostCategories { get; set; }
        public DbSet<Product> Products { get; set; }
        public OMSDBContext(DbContextOptions<OMSDBContext> options) : base(options) { }
        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            // remove pre-fix AspNet
            foreach (var entityType in modelBuilder.Model.GetEntityTypes())
            {
                var nameTable = entityType.Name;
                if (nameTable.StartsWith("AspNet"))
                {
                    entityType.SetTableName(nameTable.Substring(6));
                }
            }

            // Đánh chỉ mục cho Categor 
            modelBuilder.Entity<Category>(entity =>
            {
                entity.HasIndex(p => p.Slug);
            });
            // Tạo mối quan hệ many -many between Post and Category bằng việc tạo key cho bảng bằng việc kết hợp PostId và CategoryId
            modelBuilder.Entity<PostCategory>().HasKey(p => new { p.PostId, p.CategoryId });

            /// Thực hiện trèn 4 sản phẩm vào bảng khi bảng Product được tạo
            modelBuilder.Entry<Product>().HasData(
               new Product()
               {
                   ProductId = 1,
                   Name = "Đá phong thuỷ tự nhiên",
                   Description = "Số 1 cao 40cm rộng 20cm dày 20cm màu xanh lá cây đậm",
                   Price = 1000000
               },
                new Product()
                {
                    ProductId = 2,
                    Name = "Đèn đá muối hình tròn",
                    Description = "Trang trí trong nhà Chất liệu : • Đá muối",
                    Price = 1500000
                },
                new Product()
                {
                    ProductId = 3,
                    Name = "Tranh sơn mài",
                    Description = "Tranh sơn mài loại nhỏ 15x 15 giá 50.000",
                    Price = 50000
                },
                new Product()
                {
                    ProductId = 4,
                    Name = "Tranh sơn dầu - Ngựa",
                    Description = "Nguyên liệu thể hiện :    Sơn dầu",
                    Price = 450000
                }
            );
        }
    }
}
- Thực hiện tạo migrations và update database update
dotnet ef migrations add AddProductModel
dotnet ef database update
2. Thực hiện tạo controller hiển thị danh sách sản phẩm
- Xây dựng một controller dùng để hiển thị tất cả các Product/ thêm product vào cart
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Caching.Memory;

using OMS_App.Data;
using OMS_App.Models;
using Microsoft.EntityFrameworkCore;
[Route("/product/")]
public class ProductController : Controller
{
    private readonly ILogger<ProductController> _logger;
    private readonly OMSDBContext _context;
    private IMemoryCache _cache;
    // Số bài viết hiển thị trên một trang danh mục
    public const int ITEM_PER_PAGE = 4;
    public ProductController(ILogger<ProductController> logger, OMSDBContext context, IMemoryCache cache)
    {
        _logger = logger;
        _context = context;
        _cache = cache;
    }


    public async Task<IActionResult> Index()
    {
        var products = await _context.Products.TolistAsync();
        return View(products)

    }
}

- Trang View/product/Index.cshtml
@using OMS_App.Models

@model List<Product>;
@{

    Layout = "_Layout";

    ViewData["Title"] = "Các sản phẩm ";

}
<div class="card-columns">
    @foreach (var product in Model)
    {
        <div class="card">
            <h3 class="card-header">@product.Name</h3>
            <div class="card-body" style="height:150px">@product.Description</div>
            <div class="card-footer">
                <span class="text-muted">@(product.Price.Tostring("n0")) VND</span>
                <a asp-route="addcart" asp-route-productid="@product.ProductId"
                    class="btn btn-secondary btn-sm float-right">
                    Order
                </a>
            </div>
        </div>
    }
</div>