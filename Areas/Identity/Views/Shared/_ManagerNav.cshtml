@using OMS_App.Areas.Identity.Controllers;
@inject SignInManager<AppUser> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<ul class="nav nav-pills flex-column">
    <li class="nav-item"><a class="nav-link @ManageNavView.IndexNavClass(ViewContext)" id="profile" asp-action="Index">Profile</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavView.EmailNavClass(ViewContext)" id="email" asp-action="Email">Email</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavView.ChangePasswordNavClass(ViewContext)" id="change-password" asp-action="ChangePassword">Password</a></li>
    @if (hasExternalLogins)
    {
        <li id="external-logins" class="nav-item"><a id="external-login" class="nav-link @ManageNavView.ExternalLoginNavClass(ViewContext)" asp-action="ExternalLogins">External logins</a></li>
    }
    <li class="nav-item"><a class="nav-link @ManageNavView.TwoFactorAuthenticationNavClass(ViewContext)" id="two-factor" asp-action="TwoFactorAuthentication">Two-factor authentication</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavView.PersonalDataNavClass(ViewContext)" id="personal-data" asp-action="PersonalData">Personal data</a></li>
</ul>