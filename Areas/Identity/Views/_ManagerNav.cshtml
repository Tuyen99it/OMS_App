@inject SignInManager<AppUser> SignInManager
@using OMS_App.Areas.Identity.Controllers;
@{
    var hasExternalLogins = ( await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<ul class="nav nav-pills flex-column">
    <li class="nav-item">
        <a class="nav-link @ManageNavView.IndexNavClass(ViewContext) id="profile" asp-controller="Manager" asp-action="Index">Profile</a>
        <a class="nav-link @ManageNavView.ChangePasswordNavClass(ViewContext)" id="="email:a asp-controller="Manager" asp-action="ChangePassword">Change Password</a>
        @if(hasExternalLogins){
            <a class="nav-link @ManageNavView.ExternalLoginNavClass(ViewContext)" id="externalLogins" asp-controller="Manager" asp-action="ExternalLogins">External Logins</a>
        }
        <a class="nav-link @ManageNavView.TwoFactorAuthenticationNavClass(ViewContext)" id="twoFactorAuthentication" asp-controller="Manager" asp-action="TwoFactorAuthentication">Two-factor Authentication</a>
        <a class="nav-link @ManageNavView.PersonalDataNavClass(ViewContext)" id="personalData" asp-controller="Manager" asp-action="PersonalData">Personal Data</a>
    </li>
</ul>