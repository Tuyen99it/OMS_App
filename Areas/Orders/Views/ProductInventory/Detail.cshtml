@model ProductNameReadDto;
@{
    ViewData["Title"] = "Detail";

}

<h1> @Model.Name Detail</h1>

<div class="d-flex flex-wrap">
    <div class="col-xl-5">
        <div class="row">

            <strong>
                @Html.DisplayNameFor(Model => Model.Name)
            </strong>:
            <p>
                @Html.DisplayFor(Model => Model.Name)
            </p>
        </div>
        <div class="row">
            <p>
                <strong>
                    @Html.DisplayNameFor(Model => Model.Description)
                </strong>:
            <p>
                @Html.DisplayFor(Model => Model.Description)
            </p>
            </p>
        </div>
        <div class="row">
            <p>
                <strong>
                    @Html.DisplayNameFor(Model => Model.Price)
                </strong>:
            <p>
                @Html.DisplayFor(Model => Model.Price)
            </p>
            </p>
        </div>

    </div>

    <div class="col-md-5">
        @if (Model.ProductImages.Count() > 0)
        {
            @await Html.PartialAsync("_MediaGalleryPortal", Model.ProductImages)
            ;
        }
        else
        {
            <h3>There is no image</h3>
        }
    </div>
</div>
<div>
    <p>
        <a asp-action="Update" asp-controller="ProductInventory" asp-route-productId="@Model.Id"> Edit Product </a>
    </p>
    <p>
        <a asp-action="Index" asp-controller="ProductInventory">Product Inventory Management</a>
    </p>

</div>